import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.ResolverStyle;
import java.util.Calendar;
import java.util.Date;

public class Locacao {
	
	private Calendar inicio;
	protected Veiculo veiculo;
	protected Cliente cliente;
	
	//public Locacao(int diai,int mesi,int anoi,int horai,int diaf,int mesf,int anof, int horaf){
		
	//	Calendar data = Calendar.getInstance();
	//	Calendar data1 = Calendar.getInstance();
		
	//	data.set(Calendar.DATE, diai);
	//	data.set(Calendar.MONTH, mesi);
	//	data.set(Calendar.YEAR, anoi);
	//	data.set(Calendar.HOUR, horai);
		
	//	data1.set(Calendar.DATE, diaf);
	//	data1.set(Calendar.MONTH, mesf);
	//	data1.set(Calendar.YEAR,anof);
	//	data1.set(Calendar.HOUR_OF_DAY,horaf);
	//}	
	public Locacao(Calendar inicio){}
	
	public boolean Locacao2(){
		
			int dia=this.inicio.get(Calendar.DATE);
			int mes=this.inicio.get(Calendar.MONTH);
			int ano=this.inicio.get(Calendar.YEAR);
			
			//if(dia<10) {
				
			//}
			
			String strDate=(dia+"/"+mes+"/"+ano);
		
		
		    String dateFormat = "dd/MM/uuuu";

		    DateTimeFormatter dateTimeFormatter = DateTimeFormatter
		    .ofPattern(dateFormat)
		    .withResolverStyle(ResolverStyle.STRICT);
		    try {
		        LocalDate date = LocalDate.parse(strDate, dateTimeFormatter);
		        return true;
		    } catch (DateTimeParseException e) {
		       return false;
		    } 
		
		
		
		//this.inicio=inicio;
		
	}

	
	public int contadias (Calendar fim) {
		
		int dias=0;
		int diasano=0;
		boolean um=false;
		boolean dois=false;
		
		this.inicio.set(Calendar.MONTH, this.inicio.get(Calendar.MONTH)-1);
		fim.set(Calendar.MONTH, fim.get(Calendar.MONTH)-1);
		
		if(((fim.get(Calendar.MONTH))-(this.inicio.get(Calendar.MONTH)))>1) {
			um=true;
			System.out.println("maior que 1");
		}	
		if (((fim.get(Calendar.MONTH))-(this.inicio.get(Calendar.MONTH)))<=0) {
			dois=true;
			System.out.println("menor que 0");
		}
		
		if((fim.get(Calendar.YEAR)-this.inicio.get(Calendar.YEAR))>1) {
			
			Calendar anos=Calendar.getInstance();
			anos.set(Calendar.YEAR, this.inicio.get(Calendar.YEAR)+1);
			
			for(int i=anos.get(Calendar.YEAR);i<fim.get(Calendar.YEAR);i++) {
				
				anos.set(Calendar.YEAR, this.inicio.get(Calendar.YEAR)+1);
				
				
				diasano=diasano+(anos.get(Calendar.DAY_OF_YEAR))+38;
				
				System.out.println("dias dos anos do meio: "+diasano);
				
			}
		}
		
//SOMATORIA DOS DIAS ENTRE OS MESES INICIAIS		
		
		if ( (um) || (dois) ) {
			Calendar mes = Calendar.getInstance();
			
			for(int i=this.inicio.get(Calendar.MONTH);i!=fim.get(Calendar.MONTH);i++) {
				
				if (i>=11) {
					i=0;
				}
				
				if (i==this.inicio.get(Calendar.MONTH)){
					i++;
				}
				
				mes.set(Calendar.MONTH, i);
				mes.set(Calendar.YEAR, this.inicio.get(Calendar.YEAR));
				
				dias= dias+mes.getActualMaximum(Calendar.DAY_OF_MONTH);
				
				System.out.println("dias dos meses do meio: "+dias);
			}
		}
		
		int diai=this.inicio.get(Calendar.DATE)-1;
		int diaf=fim.get(Calendar.DATE);
		
		Calendar mesi=Calendar.getInstance();
		mesi.set(Calendar.MONTH, this.inicio.get(Calendar.MONTH));
		mesi.set(Calendar.YEAR, this.inicio.get(Calendar.YEAR));
		
		int diasmesi=mesi.getActualMaximum(Calendar.DAY_OF_MONTH);
		
		int diastotal=((diasmesi)-diai)+diaf+1;
		
		if(fim.get(Calendar.HOUR_OF_DAY)>12) {
			diastotal=diastotal+1;
		}
		System.out.println("dia inicio "+diai);
		System.out.println("dia final "+diaf);
		System.out.println("dias totais inicio + fim "+diastotal);
		
		return diastotal+dias+diasano;
		
	}
	
	
	
	
	
	
	

}
